name: RECOVERY GOFILE

on:
  workflow_dispatch:
    inputs:
      RECOVERY_URL:
        description: 'RECOVERY URL'
        required: true
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out
      uses: actions/checkout@main

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt install git wget lz4 tar openssl python3 curl -y

    - name: Fetch image from URL
      run: |
        wget -O recovery.img ${{ github.event.inputs.RECOVERY_URL }}

    - name: Patch Process-1
      run: |
        chmod a+x script1.sh
        chmod a+x magiskboot
        ./script1.sh || true

    - name: Patch Process-2
      run: |
        chmod a+x script2.sh
        ./script2.sh || true
        python3 avbtool extract_public_key --key phh.pem --output phh.pub.bin
        python3 avbtool add_hash_footer --partition_name recovery --partition_size $(wc -c recovery.img |cut -f 1 -d ' ') --image recovery-patched.img --key phh.pem --algorithm SHA256_RSA4096
        mkdir output && cd output
        mv ../recovery-patched.img recovery.img
        tar cvf fastbootd-recovery.tar recovery.img

    - name: Upload Recovery to Gofile
      run: |
        RESPONSE=$(curl -F "file=@output/fastbootd-recovery.tar" \
                        -H "Authorization: Bearer E29ro0ueg1dXX7CHmJSdrO9puOTUMREk" \
                        https://upload.gofile.io/uploadFile)
        
        echo "Gofile API Response: $RESPONSE"
        
        DOWNLOAD_PAGE=$(echo $RESPONSE | grep -o '"downloadPage": *"[^"]*"' | cut -d '"' -f 4)
        
        if [ -z "$DOWNLOAD_PAGE" ]; then
          echo "Error: Could not extract download page URL from Gofile response."
          exit 1
        fi
        
        echo "File uploaded successfully!"
        echo "Download Link: $DOWNLOAD_PAGE"
